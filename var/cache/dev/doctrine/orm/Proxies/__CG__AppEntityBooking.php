<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Booking extends \App\Entity\Booking implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'vehicle', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'date', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'owner', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'renter', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'dateRenter', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'commentOwner', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'commentRenter', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'NoticeOwnerStatus', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'NoticeRenterStatus'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'vehicle', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'date', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'owner', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'renter', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'dateRenter', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'createdAt', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'commentOwner', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'commentRenter', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'NoticeOwnerStatus', '' . "\0" . 'App\\Entity\\Booking' . "\0" . 'NoticeRenterStatus'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Booking $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getVehicle(): ?\App\Entity\Vehicle
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVehicle', []);

        return parent::getVehicle();
    }

    /**
     * {@inheritDoc}
     */
    public function setVehicle(?\App\Entity\Vehicle $vehicle): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVehicle', [$vehicle]);

        return parent::setVehicle($vehicle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(array $date): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(int $status): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(?\App\Entity\User $owner): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getRenter(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRenter', []);

        return parent::getRenter();
    }

    /**
     * {@inheritDoc}
     */
    public function setRenter(?\App\Entity\User $renter): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRenter', [$renter]);

        return parent::setRenter($renter);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRenter(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRenter', []);

        return parent::getDateRenter();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRenter(array $dateRenter): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRenter', [$dateRenter]);

        return parent::setDateRenter($dateRenter);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTimeInterface $createdAt): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(?\DateTimeInterface $updatedAt): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function changeUpdatedAtOnPersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeUpdatedAtOnPersist', []);

        return parent::changeUpdatedAtOnPersist();
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentOwner(): ?\App\Entity\Comment
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentOwner', []);

        return parent::getCommentOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentOwner(?\App\Entity\Comment $commentOwner): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentOwner', [$commentOwner]);

        return parent::setCommentOwner($commentOwner);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentRenter(): ?\App\Entity\Comment
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentRenter', []);

        return parent::getCommentRenter();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentRenter(?\App\Entity\Comment $commentRenter): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentRenter', [$commentRenter]);

        return parent::setCommentRenter($commentRenter);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoticeOwnerStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoticeOwnerStatus', []);

        return parent::getNoticeOwnerStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoticeOwnerStatus(bool $NoticeOwnerStatus): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoticeOwnerStatus', [$NoticeOwnerStatus]);

        return parent::setNoticeOwnerStatus($NoticeOwnerStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoticeRenterStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoticeRenterStatus', []);

        return parent::getNoticeRenterStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoticeRenterStatus(bool $NoticeRenterStatus): \App\Entity\Booking
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoticeRenterStatus', [$NoticeRenterStatus]);

        return parent::setNoticeRenterStatus($NoticeRenterStatus);
    }

}
